--------------------
./configure
Вт 30 сен 2025 17:53:02 +07
Checking for gcc...
=== ztest198819.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest198819.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest198819.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest198819.c

Checking for shared library support...
=== ztest198819.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest198819.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest198819.so ztest198819.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest198819.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest198819.c
Checking for size_t... Yes.

=== ztest198819.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest198819.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest198819.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest198819 ztest198819.c
Checking for strerror... Yes.

=== ztest198819.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest198819.c
Checking for unistd.h... Yes.

=== ztest198819.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest198819.c
Checking for stdarg.h... Yes.

=== ztest198819.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest198819.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest198819.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest198819 ztest198819.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest198819.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest198819.c
Checking for return value of vsnprintf()... Yes.

=== ztest198819.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest198819.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/firemax/Eltex/Practika19/zlib-1.3.1/_install
Вт 30 сен 2025 17:59:14 +07
Checking for gcc...
=== ztest211449.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest211449.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest211449.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest211449.c

Checking for shared library support...
=== ztest211449.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest211449.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest211449.so ztest211449.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest211449.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest211449.c
Checking for size_t... Yes.

=== ztest211449.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest211449.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest211449.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest211449 ztest211449.c
Checking for strerror... Yes.

=== ztest211449.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest211449.c
Checking for unistd.h... Yes.

=== ztest211449.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest211449.c
Checking for stdarg.h... Yes.

=== ztest211449.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest211449.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest211449.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest211449 ztest211449.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest211449.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest211449.c
Checking for return value of vsnprintf()... Yes.

=== ztest211449.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest211449.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/firemax/Eltex/Practika19/zlib-1.3.1/_install
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/firemax/Eltex/Practika19/zlib-1.3.1/_install
Ср 01 окт 2025 10:00:07 +07
Checking for gcc...
=== ztest18913.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest18913.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest18913.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest18913.c
ztest18913.c:1:1: fatal error: error closing /tmp/cco2aS1K.s: На устройстве не осталось свободного места
    1 | int foo() { return 0; }
      | ^~~
compilation terminated.
(exit code 1)
Compiler error reporting is too harsh for ./configure (perhaps remove -Werror).
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/home/firemax/Eltex/Practika19/zlib-1.3.1/_install -werror
Ср 01 окт 2025 10:00:37 +07
Checking for gcc...
=== ztest19870.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest19870.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest19870.c ===
int foo() { return 0; }
===
gcc -c -O3 -Wall -Wextra ztest19870.c

Checking for shared library support...
=== ztest19870.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest19870.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest19870.so ztest19870.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest19870.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 -Wall -Wextra ztest19870.c
Checking for size_t... Yes.

=== ztest19870.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 ztest19870.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest19870.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 -o ztest19870 ztest19870.c
Checking for strerror... Yes.

=== ztest19870.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 ztest19870.c
Checking for unistd.h... Yes.

=== ztest19870.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 ztest19870.c
Checking for stdarg.h... Yes.

=== ztest19870.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 ztest19870.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest19870.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 -o ztest19870 ztest19870.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest19870.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 ztest19870.c
Checking for return value of vsnprintf()... Yes.

=== ztest19870.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 ztest19870.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -Wall -Wextra -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/firemax/Eltex/Practika19/zlib-1.3.1/_install
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/firemax/Eltex/Practika19/zlib-1.3.1/_install
Ср 01 окт 2025 10:00:48 +07
Checking for gcc...
=== ztest20399.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest20399.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20399.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest20399.c

Checking for shared library support...
=== ztest20399.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest20399.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest20399.so ztest20399.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest20399.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest20399.c
Checking for size_t... Yes.

=== ztest20399.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20399.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20399.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20399 ztest20399.c
Checking for strerror... Yes.

=== ztest20399.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20399.c
Checking for unistd.h... Yes.

=== ztest20399.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20399.c
Checking for stdarg.h... Yes.

=== ztest20399.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20399.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20399.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest20399 ztest20399.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20399.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20399.c
Checking for return value of vsnprintf()... Yes.

=== ztest20399.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest20399.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/firemax/Eltex/Practika19/zlib-1.3.1/_install
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/firemax/Eltex/Practika19/zlib-1.3.1/_install
Ср 01 окт 2025 10:02:54 +07
Checking for gcc...
=== ztest25969.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest25969.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest25969.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest25969.c

Checking for shared library support...
=== ztest25969.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest25969.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest25969.so ztest25969.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest25969.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest25969.c
Checking for size_t... Yes.

=== ztest25969.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25969.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest25969.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25969 ztest25969.c
Checking for strerror... Yes.

=== ztest25969.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25969.c
Checking for unistd.h... Yes.

=== ztest25969.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25969.c
Checking for stdarg.h... Yes.

=== ztest25969.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25969.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest25969.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest25969 ztest25969.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest25969.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25969.c
Checking for return value of vsnprintf()... Yes.

=== ztest25969.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest25969.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/firemax/Eltex/Practika19/zlib-1.3.1/_install
sharedlibdir = ${libdir}
uname = Linux
--------------------


